# environment file for make

#set default target 'make', if not set
ifeq ($(MAKECMDGOALS),)
  MAKECMDGOALS = make
all: make
endif

TOPDIR := $(realpath $(dir $(lastword $(MAKEFILE_LIST)))/..)/
ifeq ($(MAKEFILE_ENV_INCLUDED),)
include $(TOPDIR)Makefile.env
endif

ifneq ($(AVOID_VERSION),)
INCDIR = include/staff/$(TARGET)/
else
INCDIR = include/staff-$(VERSION)/$(TARGET)/
endif
INCDIR_STAFF = include/staff
COMDIR = components/
SAMPLESDIR = samples/

DEPLOYROOTDIR = $(TOPDIR)deploy/$(PLATFORM)/
DEPLOYDIR = $(DEPLOYROOTDIR)$(STAFF_HOME)/
INSTALLDIR = $(STAFF_HOME)/

C_FLAGS = -I$(AXIS2C_INCDIR) -I$(DEPLOYDIR)include
L_FLAGS = -L$(AXIS2C_LIBDIR) -L$(DEPLOYDIR)lib

ifneq ($(OS),Darwin)
ifneq ($(OS),SunOS)
L_FLAGS += -Wl,-rpath-link,$(DEPLOYDIR)/lib -Wl,-rpath-link,$(AXIS2C_LIBDIR)
else
L_FLAGS += -R,$(DEPLOYDIR)/lib -R,$(AXIS2C_LIBDIR)
endif
endif

CFLAGS += $(C_FLAGS)
CXXFLAGS += $(C_FLAGS)
LFLAGS += $(L_FLAGS)
LDFLAGS += $(L_FLAGS)

LIBTARGET_BASE = $(LIBPREFIX)staff$(TARGET)
LIBTARGETVER = $(LIBTARGET_BASE)$(LIBVEREXT)
LIBTARGET = $(LIBTARGET_BASE)$(LIBEXT)

ifneq ($(HOSTBUILD),1)
HOSTDEPLOYDIR = $(TOPDIR)deploy/$(HOSTPLATFORM)-cross/$(STAFF_HOME)/
else
HOSTDEPLOYDIR = $(DEPLOYDIR)
endif
STAFF_CODEGEN = STAFF_HOME=$(HOSTDEPLOYDIR) $(LIBRARY_PATH_ENV)=$(HOSTDEPLOYDIR)lib$(LIBRARY_PREV_PATH_ENV) $(HOSTDEPLOYDIR)bin/staff_codegen


ifeq ($(AXIS2C_HOME),)
AXIS2C_INCDIR := $(shell pkg-config --cflags-only-I axis2c | sed 's;^-I;;;s;/$$;;')
AXIS2C_LIBDIR := $(shell pkg-config --libs-only-L axis2c | sed 's;^-L;;;s;/$$;;')
ifneq ($(wildcard $(dir $(AXIS2C_LIBDIR))modules),)
AXIS2C_HOME := $(dir $(AXIS2C_LIBDIR))
endif
else
AXIS2C_INCDIR := $(wildcard $(AXIS2C_HOME)/include/axis2-*)
AXIS2C_LIBDIR = $(AXIS2C_HOME)/lib
endif

check:
ifeq ($(AXIS2C_HOME),)
	@$(ECHO) "\033[31;1mERROR: Can't detect AXIS2C_HOME.\033[0m"; false
else
ifeq ($(TOPDIR),)
	@$(ECHO) "\033[31;1mERROR: Can't detect topdir! \nPlease, rename topdir to \"staff\" or make, using command: TOPDIR=<full path to staff> make\033[0m"; false
else
ifeq ($(STAFF_HOME),)
ifeq ($(MAKECMDGOALS),install)
	@$(ECHO) "\033[31;1mERROR: STAFF_HOME is not set\033[0m"; false
endif
endif
endif
endif

LDAXIS2LIBS = -laxutil -laxis2_parser -laxis2_engine

# detect axiom library name
ifneq (,$(filter $(OS),MINGW WINSDK))
ifneq ($(wildcard $(AXIS2C_HOME)/lib/axiom.dll),)
# this is msvc version
LDAXIS2LIBS += -laxiom
AXIS2_AXIOM_NAME = -laxiom
endif
endif
ifeq ($(AXIS2_AXIOM_NAME),)
LDAXIS2LIBS += -laxis2_axiom
endif

# detect is http_common is separate library or built-in into axis2_engine
ifneq ($(wildcard $(AXIS2C_HOME)/lib/*axis2_http_common*),)
LDAXIS2LIBS += -laxis2_http_common
endif

ifeq ($(AXIS2C_INCDIR),)
%:
	@$(ECHO) "\033[31;1mERROR: Cannot detect Axis2/C include dir.\nIs Axis2/C installed in $(AXIS2C_HOME) ?\033[0m"; false
endif

ifneq ($(WITHOUT_SECURITY),)
CXXFLAGS += -DWITHOUT_SECURITY
CFLAGS += -DWITHOUT_SECURITY
endif
