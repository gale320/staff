// This file generated by staff_codegen
// For more information please visit: http://code.google.com/p/staff/
// Client skeleton

#include <memory>
#include <staff/utils/Log.h>
#include <staff/common/logoperators.h>
#include <staff/common/Exception.h>
#include <staff/common/DataObject.h>
#include "foo2Proxy.h"


int main(int /*nArgs*/, const char* /*paszArgs*/[])
{
  try
  {
    fooServiceProxy proxy;

    std::string req2 =
      "<ns0:fooMethod2Request xmlns:ns0=\"http://namespace1\">"
        "<ns0:param1><ns0:attr1>test</ns0:attr1></ns0:param1><ns0:param2>false</ns0:param2>"
      "</ns0:fooMethod2Request>";

    staff::Optional< ::fooType1 > account;
    account->attr1 = "test";

    staff::DataObject result2 = proxy.fooMethod2(account, false);

    std::string res2 = result2.ToString();

    STAFF_ASSERT(req2 == res2, "req2 is wrong.\n result:\n" + res2 + "\n\nexpected:\n" + req2);
    staff::LogInfo() << "req2 ok";



    std::string req1 =
      "<ns0:fooMethod1Request xmlns:ns0=\"http://namespace1\">"
        "<ns0:param1>guid</ns0:param1><ns0:param2>0</ns0:param2>"
      "</ns0:fooMethod1Request>";

    ::guid deviceId = "guid";
    short type = 0;
    staff::DataObject result1 = proxy.fooMethod1(deviceId, type);

    std::string res1 = result1.ToString();

    STAFF_ASSERT(req1 == res1, "req1 is wrong.\n result:\n" + res1 + "\n\nexpected:\n" + req1);
    staff::LogInfo() << "req1 ok";
  }
  STAFF_CATCH_ALL

  return 0;
}

