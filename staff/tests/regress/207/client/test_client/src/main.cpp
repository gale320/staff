// This file generated by staff_codegen
// For more information please visit: http://code.google.com/p/staff/
// Client skeleton

#include <memory>
#include <staff/utils/Log.h>
#include <staff/common/Exception.h>
#include <staff/common/DataObject.h>
#include "TestProxy.h"

int main(int /*nArgs*/, const char* /*paszArgs*/[])
{
  std::string good = "<t><boolValue>true</boolValue><intValue>123</intValue></t>";
  std::string bad = "<t><boolValue>bad</boolValue><intValue>foo</intValue></t>";
  try
  {
    {
      staff::tests::TestInvalidOpt opt1;
      staff::DataObject d1;
      d1.FromString(good);
      d1 >> opt1;
      staff::LogInfo() << "exception is not thrown on good value" << staff::LogResultSuccess;
    }


    bool ok = false;
    try
    {
      staff::tests::TestInvalidOpt opt1;
      staff::DataObject d1;
      d1.FromString(bad);
      d1 >> opt1;
    }
    catch(...)
    {
      staff::LogInfo() << "exception thrown on bad value" << staff::LogResultSuccess;
      ok = true;
    }

    STAFF_ASSERT(ok, "Exception is not thrown on bad value");

    return 0;
  }
  STAFF_CATCH_ALL_DESCR("TEST FAILED")

  return 3;
}

